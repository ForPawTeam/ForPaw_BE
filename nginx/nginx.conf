worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=360m use_temp_path=off;

    upstream next-server {
        server react:3000;
    }

    upstream spring {
        server spring:8080;
    }

    server {
        listen 80;
        server_name 54.180.244.93; # EC2 IP 주소

        location / {
            proxy_cache my_cache;
            proxy_cache_valid 200 6h;
            proxy_cache_bypass $http_cache_control;
            proxy_no_cache $http_cache_control;

	    proxy_pass http://next-server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_cache_bypass $http_upgrade;
        }

        location /api {
            proxy_pass http://spring;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}

